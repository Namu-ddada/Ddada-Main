include /etc/nginx/mime.types;

server{
   listen 80;
   server_name j11a509.p.ssafy.io;
   return 301 https://ddada.xyz$request_uri;
}

server{
   listen 80;
   server_name ddada.xyz;
   return 301 https://$host$request_uri;
}

server{
   listen 443;
   ssl_certificate /etc/letsencrypt/live/j11a509.p.ssafy.io/fullchain.pem;
   ssl_certificate_key /etc/letsencrypt/live/j11a509.p.ssafy.io/privkey.pem;
   server_name j11a509.p.ssafy.io;
   return 301 https://ddada.xyz$request_uri;
}


server{
   listen 443 ssl;
   ssl_certificate /etc/letsencrypt/live/ddada.xyz/fullchain.pem;
   ssl_certificate_key /etc/letsencrypt/live/ddada.xyz/privkey.pem;
   server_name ddada.xyz;

   location / {
        proxy_pass http://next-app:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ {
        # CORS 프리플라이트 요청에 대한 응답 처리
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $http_origin;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PATCH, PUT, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true';
            return 204;
        }

        proxy_pass http://ddada-be:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

}
